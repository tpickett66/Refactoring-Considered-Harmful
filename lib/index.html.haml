!!! 5
%html{lang:'en'}
  %head
    %meta{ charset:'utf-8' }
    %meta{ name:'viewport', content:'width=1024' }
    %meta{ name:'apple-mobile-web-app-capable', content:'yes' }
    %title
      Refactoring Considered Harmful

    %meta{ name:'description', content:'A brief, interactive presentation on the evils of refactoring' }
    %meta{ name:'author', content: 'Tyler Pickett' }

    %link{href:"http://fonts.googleapis.com/css?family=Average+Sans|Montserrat+Alternates|Strait|Montserrat|Sigmar+One", rel:"stylesheet"}

    %link{ rel: "stylesheet", href: "css/harmful.css" }
    %link{ rel: 'shortcut icon', href:'favicon.png' }
    %link{ rel: 'apple-touch-icon', href: 'apple-touch-icon.png' }

  %body.impress-not-supported
    .fallback-message
      %p
        Your browser
        %b doesn't support all of the features required
        by impress.js, so you are presented with a simplified version of this presentation.
      %p
        For the best experience please use the latest version of Chrome, Safari or Firefox

    #impress
      #fake-title.step{"data-x"=>"0", "data-y"=>"0", "data-scale"=>2}
      #title.step{"data-x"=>"0", "data-y"=>"0", "data-scale"=>2}
        .not
          Not
        Refactoring
        %br
        Considered
        %br
        Harmful

      #whoami.step{"data-x"=>"0", "data-y"=>"1024"}
        Tyler Pickett
        %br
        Twitter/Github: tpickett66

      #what.section.step{"data-x"=>"2000", "data-y"=>"1024", "data-rotate"=>"90", "data-scale"=>"2"}
        What?
      #wikipedia.step{"data-x"=>"2100", "data-y"=>1500, 'data-z'=>-2100, 'data-rotate'=>90}
        .title Wikipedia
        .text
          %b Code refactoring
          is a "disciplined technique for restructing and existing body of code,
          altering its internal structure without changing its external
          behavior"<sup>1</sup>, undertaken in order to improve some nonfunctional
          attributes of the software. Advantages include improved code
          readability and reduced complexity to improve the maintainability of
          the source code, as well as a more expressive internal architecture or
          object model to improve extensibility.
        .note
          %ol
            %li
              Martin Fowler
              %a{:href => 'http://refactoring.com/'} refactoring.com

      #blah.step{"data-x"=>1400, 'data-y'=>1800, 'data-z'=>-1400, 'data-rotate'=>120}
        .first blah
        .second Blah!
        .third BLAH!
      #suck-less.step{'data-x'=>700, 'data-y'=>2100, 'data-z'=>-700, 'data-rotate'=>150}
        TL;DR: Make your code suck less.

      #why.section.step{'data-x'=>0, 'data-y'=>2400, 'data-rotate'=>180, 'data-scale'=>2}
        Why?
      #maintenance.step{'data-x'=>0, 'data-y'=>2400, 'data-z'=>-2100, 'data-rotate'=>180}
        Maintenance
      #conversation.step{'data-x'=>-800, 'data-y'=>1600, 'data-z'=>-1400, 'data-rotate'=>210}
        %p.quote "Code is a conversation with the reader"
        %p.attribution Unknown
      #james.step{'data-x'=>-1600, 'data-y'=>800, 'data-z'=>-700, 'data-rotate'=>240}
        .name jamescarr
        I just know that when I see a few hundred lines of
        procedural hogwash with view and database logic in
        the controller the author intended to tell me to go F myself

      #who.section.step{'data-x'=>-2400, 'data-y'=>0, 'data-rotate'=>270, 'data-scale'=>2}
        Who?
      #ruby.step{'data-x'=>-2400, 'data-y'=>0, 'data-z'=>-2100, 'data-rotate'=>270}
        Ruby users?
      #haskell.step{'data-x'=>-1600, 'data-y'=>-800, 'data-z'=>-1400, 'data-rotate'=>300}
        Haskell users?
      #designers.step{'data-x'=>-800, 'data-y'=>-1600, 'data-z'=>-700, 'data-rotate'=>330}
        Designers?

      #how.section.step{'data-x'=>0, 'data-y'=>-2400, 'data-rotate'=>360, 'data-scale'=>2}
        How?

    %script{src: 'js/impress.js'}
    :javascript
      impress().init();
